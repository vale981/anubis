{
  "version": 3,
  "sources": ["../../js/proof-of-work.mjs", "../../js/proof-of-work-slow.mjs", "../../js/main.mjs"],
  "sourcesContent": ["export default function process(\n  data,\n  difficulty = 5,\n  signal = null,\n  progressCallback = null,\n  threads = (navigator.hardwareConcurrency || 1),\n) {\n  console.debug(\"fast algo\");\n  return new Promise((resolve, reject) => {\n    let webWorkerURL = URL.createObjectURL(new Blob([\n      '(', processTask(), ')()'\n    ], { type: 'application/javascript' }));\n\n    const workers = [];\n    const terminate = () => {\n      workers.forEach((w) => w.terminate());\n      if (signal != null) {\n        // clean up listener to avoid memory leak\n        signal.removeEventListener(\"abort\", terminate);\n        if (signal.aborted) {\n          console.log(\"PoW aborted\");\n          reject(false);\n        }\n      }\n    };\n    if (signal != null) {\n      signal.addEventListener(\"abort\", terminate, { once: true });\n    }\n\n    for (let i = 0; i < threads; i++) {\n      let worker = new Worker(webWorkerURL);\n\n      worker.onmessage = (event) => {\n        if (typeof event.data === \"number\") {\n          progressCallback?.(event.data);\n        } else {\n          terminate();\n          resolve(event.data);\n        }\n      };\n\n      worker.onerror = (event) => {\n        terminate();\n        reject(event);\n      };\n\n      worker.postMessage({\n        data,\n        difficulty,\n        nonce: i,\n        threads,\n      });\n\n      workers.push(worker);\n    }\n\n    URL.revokeObjectURL(webWorkerURL);\n  });\n}\n\nfunction processTask() {\n  return function () {\n    const sha256 = (text) => {\n      const encoded = new TextEncoder().encode(text);\n      return crypto.subtle.digest(\"SHA-256\", encoded.buffer);\n    };\n\n    function uint8ArrayToHexString(arr) {\n      return Array.from(arr)\n        .map((c) => c.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n    }\n\n    addEventListener('message', async (event) => {\n      let data = event.data.data;\n      let difficulty = event.data.difficulty;\n      let hash;\n      let nonce = event.data.nonce;\n      let threads = event.data.threads;\n\n      const threadId = nonce;\n\n      while (true) {\n        const currentHash = await sha256(data + nonce);\n        const thisHash = new Uint8Array(currentHash);\n        let valid = true;\n\n        for (let j = 0; j < difficulty; j++) {\n          const byteIndex = Math.floor(j / 2); // which byte we are looking at\n          const nibbleIndex = j % 2; // which nibble in the byte we are looking at (0 is high, 1 is low)\n\n          let nibble = (thisHash[byteIndex] >> (nibbleIndex === 0 ? 4 : 0)) & 0x0F; // Get the nibble\n\n          if (nibble !== 0) {\n            valid = false;\n            break;\n          }\n        }\n\n        if (valid) {\n          hash = uint8ArrayToHexString(thisHash);\n          console.log(hash);\n          break;\n        }\n\n        const oldNonce = nonce;\n        nonce += threads;\n\n        // send a progress update every 1024 iterations. since each thread checks\n        // separate values, one simple way to do this is by bit masking the\n        // nonce for multiples of 1024. unfortunately, if the number of threads\n        // is not prime, only some of the threads will be sending the status\n        // update and they will get behind the others. this is slightly more\n        // complicated but ensures an even distribution between threads.\n        if (\n          nonce > oldNonce | 1023 && // we've wrapped past 1024\n          (nonce >> 10) % threads === threadId // and it's our turn\n        ) {\n          postMessage(nonce);\n        }\n      }\n\n      postMessage({\n        hash,\n        data,\n        difficulty,\n        nonce,\n      });\n    });\n  }.toString();\n}\n\n", "// https://dev.to/ratmd/simple-proof-of-work-in-javascript-3kgm\n\nexport default function process(\n  data,\n  difficulty = 5,\n  signal = null,\n  progressCallback = null,\n  _threads = 1,\n) {\n  console.debug(\"slow algo\");\n  return new Promise((resolve, reject) => {\n    let webWorkerURL = URL.createObjectURL(new Blob([\n      '(', processTask(), ')()'\n    ], { type: 'application/javascript' }));\n\n    let worker = new Worker(webWorkerURL);\n    const terminate = () => {\n      worker.terminate();\n      if (signal != null) {\n        // clean up listener to avoid memory leak\n        signal.removeEventListener(\"abort\", terminate);\n        if (signal.aborted) {\n          console.log(\"PoW aborted\");\n          reject(false);\n        }\n      }\n    };\n    if (signal != null) {\n      signal.addEventListener(\"abort\", terminate, { once: true });\n    }\n\n    worker.onmessage = (event) => {\n      if (typeof event.data === \"number\") {\n        progressCallback?.(event.data);\n      } else {\n        terminate();\n        resolve(event.data);\n      }\n    };\n\n    worker.onerror = (event) => {\n      terminate();\n      reject(event);\n    };\n\n    worker.postMessage({\n      data,\n      difficulty\n    });\n\n    URL.revokeObjectURL(webWorkerURL);\n  });\n}\n\nfunction processTask() {\n  return function () {\n    const sha256 = (text) => {\n      const encoded = new TextEncoder().encode(text);\n      return crypto.subtle.digest(\"SHA-256\", encoded.buffer)\n        .then((result) =>\n          Array.from(new Uint8Array(result))\n            .map((c) => c.toString(16).padStart(2, \"0\"))\n            .join(\"\"),\n        );\n    };\n\n    addEventListener('message', async (event) => {\n      let data = event.data.data;\n      let difficulty = event.data.difficulty;\n\n      let hash;\n      let nonce = 0;\n      do {\n        if (nonce & 1023 === 0) {\n          postMessage(nonce);\n        }\n        hash = await sha256(data + nonce++);\n      } while (hash.substring(0, difficulty) !== Array(difficulty + 1).join('0'));\n\n      nonce -= 1; // last nonce was post-incremented\n\n      postMessage({\n        hash,\n        data,\n        difficulty,\n        nonce,\n      });\n    });\n  }.toString();\n}", "import processFast from \"./proof-of-work.mjs\";\nimport processSlow from \"./proof-of-work-slow.mjs\";\nimport { testVideo } from \"./video.mjs\";\n\nconst algorithms = {\n  \"fast\": processFast,\n  \"slow\": processSlow,\n};\n\n// from Xeact\nconst u = (url = \"\", params = {}) => {\n  let result = new URL(url, window.location.href);\n  Object.entries(params).forEach(([k, v]) => result.searchParams.set(k, v));\n  return result.toString();\n};\n\nconst imageURL = (mood, cacheBuster) =>\n  u(`/.within.website/x/cmd/anubis/static/img/${mood}.webp`, { cacheBuster });\n\nconst dependencies = [\n  {\n    name: \"WebCrypto\",\n    msg: \"Your browser doesn't have a functioning web.crypto element. Are you viewing this over a secure context?\",\n    value: window.crypto,\n  },\n  {\n    name: \"Web Workers\",\n    msg: \"Your browser doesn't support web workers (Anubis uses this to avoid freezing your browser). Do you have a plugin like JShelter installed?\",\n    value: window.Worker,\n  },\n];\n\nfunction showContinueBar(hash, nonce, t0, t1) {\n  const barContainer = document.createElement(\"div\");\n  barContainer.style.marginTop = \"1rem\";\n  barContainer.style.width = \"100%\";\n  barContainer.style.maxWidth = \"32rem\";\n  barContainer.style.background = \"#3c3836\";\n  barContainer.style.borderRadius = \"4px\";\n  barContainer.style.overflow = \"hidden\";\n  barContainer.style.cursor = \"pointer\";\n  barContainer.style.height = \"2rem\";\n  barContainer.style.marginLeft = \"auto\";\n  barContainer.style.marginRight = \"auto\";\n  barContainer.title = \"Click to continue\";\n\n  const barInner = document.createElement(\"div\");\n  barInner.className = \"bar-inner\";\n  barInner.style.display = \"flex\";\n  barInner.style.alignItems = \"center\";\n  barInner.style.justifyContent = \"center\";\n  barInner.style.color = \"white\";\n  barInner.style.fontWeight = \"bold\";\n  barInner.style.height = \"100%\";\n  barInner.style.width = \"0\";\n  barInner.innerText = \"I've finished reading, continue \u2192\";\n\n  barContainer.appendChild(barInner);\n  document.body.appendChild(barContainer);\n\n  requestAnimationFrame(() => {\n    barInner.style.width = \"100%\";\n  });\n\n  barContainer.onclick = () => {\n    const redir = window.location.href;\n    window.location.replace(\n      u(\"/.within.website/x/cmd/anubis/api/pass-challenge\", {\n        response: hash,\n        nonce,\n        redir,\n        elapsedTime: t1 - t0\n      })\n    );\n  };\n}\n\n(async () => {\n  const status = document.getElementById('status');\n  const image = document.getElementById('image');\n  const title = document.getElementById('title');\n  const progress = document.getElementById('progress');\n  const anubisVersion = JSON.parse(document.getElementById('anubis_version').textContent);\n  const details = document.querySelector('details');\n  let userReadDetails = false;\n\n  if (details) {\n    details.addEventListener(\"toggle\", () => {\n      if (details.open) {\n        userReadDetails = true;\n      }\n    });\n  }\n\n  const ohNoes = ({ titleMsg, statusMsg, imageSrc }) => {\n    title.innerHTML = titleMsg;\n    status.innerHTML = statusMsg;\n    image.src = imageSrc;\n    progress.style.display = \"none\";\n  };\n\n  if (!window.isSecureContext) {\n    ohNoes({\n      titleMsg: \"Your context is not secure!\",\n      statusMsg: `Try connecting over HTTPS or let the admin know to set up HTTPS. For more information, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts#when_is_a_context_considered_secure\">MDN</a>.`,\n      imageSrc: imageURL(\"reject\", anubisVersion),\n    });\n    return;\n  }\n\n  // const testarea = document.getElementById('testarea');\n\n  // const videoWorks = await testVideo(testarea);\n  // console.log(`videoWorks: ${videoWorks}`);\n\n  // if (!videoWorks) {\n  //   title.innerHTML = \"Oh no!\";\n  //   status.innerHTML = \"Checks failed. Please check your browser's settings and try again.\";\n  //   image.src = imageURL(\"reject\");\n  //   progress.style.display = \"none\";\n  //   return;\n  // }\n\n  status.innerHTML = 'Calculating...';\n\n  for (const { value, name, msg } of dependencies) {\n    if (!value) {\n      ohNoes({\n        titleMsg: `Missing feature ${name}`,\n        statusMsg: msg,\n        imageSrc: imageURL(\"reject\", anubisVersion),\n      });\n    }\n  }\n\n  const { challenge, rules } = JSON.parse(document.getElementById('anubis_challenge').textContent);\n\n  const process = algorithms[rules.algorithm];\n  if (!process) {\n    ohNoes({\n      titleMsg: \"Challenge error!\",\n      statusMsg: `Failed to resolve check algorithm. You may want to reload the page.`,\n      imageSrc: imageURL(\"reject\", anubisVersion),\n    });\n    return;\n  }\n\n  status.innerHTML = `Calculating...<br/>Difficulty: ${rules.report_as}, `;\n  progress.style.display = \"inline-block\";\n\n  // the whole text, including \"Speed:\", as a single node, because some browsers\n  // (Firefox mobile) present screen readers with each node as a separate piece\n  // of text.\n  const rateText = document.createTextNode(\"Speed: 0kH/s\");\n  status.appendChild(rateText);\n\n  let lastSpeedUpdate = 0;\n  let showingApology = false;\n  const likelihood = Math.pow(16, -rules.report_as);\n\n  try {\n    const t0 = Date.now();\n    const { hash, nonce } = await process(\n      challenge,\n      rules.difficulty,\n      null,\n      (iters) => {\n        const delta = Date.now() - t0;\n        // only update the speed every second so it's less visually distracting\n        if (delta - lastSpeedUpdate > 1000) {\n          lastSpeedUpdate = delta;\n          rateText.data = `Speed: ${(iters / delta).toFixed(3)}kH/s`;\n        }\n        // the probability of still being on the page is (1 - likelihood) ^ iters.\n        // by definition, half of the time the progress bar only gets to half, so\n        // apply a polynomial ease-out function to move faster in the beginning\n        // and then slow down as things get increasingly unlikely. quadratic felt\n        // the best in testing, but this may need adjustment in the future.\n\n        const probability = Math.pow(1 - likelihood, iters);\n        const distance = (1 - Math.pow(probability, 2)) * 100;\n        progress[\"aria-valuenow\"] = distance;\n        progress.firstElementChild.style.width = `${distance}%`;\n\n        if (probability < 0.1 && !showingApology) {\n          status.append(\n            document.createElement(\"br\"),\n            document.createTextNode(\n              \"Verification is taking longer than expected. Please do not refresh the page.\",\n            ),\n          );\n          showingApology = true;\n        }\n      },\n    );\n    const t1 = Date.now();\n    console.log({ hash, nonce });\n\n    title.innerHTML = \"Success!\";\n    status.innerHTML = `Done! Took ${t1 - t0}ms, ${nonce} iterations`;\n    image.src = imageURL(\"happy\", anubisVersion);\n    progress.style.display = \"none\";\n\n    if (userReadDetails) {\n      const container = document.getElementById(\"progress\");\n\n      // Style progress bar as a continue button\n      container.style.display = \"flex\";\n      container.style.alignItems = \"center\";\n      container.style.justifyContent = \"center\";\n      container.style.height = \"2rem\";\n      container.style.borderRadius = \"1rem\";\n      container.style.cursor = \"pointer\";\n      container.style.background = \"#b16286\";\n      container.style.color = \"white\";\n      container.style.fontWeight = \"bold\";\n      container.style.outline = \"4px solid #b16286\";\n      container.style.outlineOffset = \"2px\";\n      container.style.width = \"min(20rem, 90%)\";\n      container.style.margin = \"1rem auto 2rem\";\n      container.innerHTML = \"I've finished reading, continue \u2192\";\n\n      function onDetailsExpand() {\n        const redir = window.location.href;\n        window.location.replace(\n          u(\"/.within.website/x/cmd/anubis/api/pass-challenge\", {\n            response: hash,\n            nonce,\n            redir,\n            elapsedTime: t1 - t0\n          }),\n        );\n      }\n\n      container.onclick = onDetailsExpand;\n      setTimeout(onDetailsExpand, 30000);\n\n    } else {\n      setTimeout(() => {\n        const redir = window.location.href;\n        window.location.replace(\n          u(\"/.within.website/x/cmd/anubis/api/pass-challenge\", {\n            response: hash,\n            nonce,\n            redir,\n            elapsedTime: t1 - t0\n          }),\n        );\n      }, 250);\n    }\n\n  } catch (err) {\n    ohNoes({\n      titleMsg: \"Calculation error!\",\n      statusMsg: `Failed to calculate challenge: ${err.message}`,\n      imageSrc: imageURL(\"reject\", anubisVersion),\n    });\n  }\n})();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;MAAe,SAARA,EACLC,EACAC,EAAa,EACbC,EAAS,KACTC,EAAmB,KACnBC,EAAW,UAAU,qBAAuB,EAC5C,CACA,eAAQ,MAAM,WAAW,EAClB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAIC,EAAe,IAAI,gBAAgB,IAAI,KAAK,CAC9C,IAAKC,EAAY,EAAG,KACtB,EAAG,CAAE,KAAM,wBAAyB,CAAC,CAAC,EAEhCC,EAAU,CAAC,EACXC,EAAY,IAAM,CACtBD,EAAQ,QAASE,GAAMA,EAAE,UAAU,CAAC,EAChCT,GAAU,OAEZA,EAAO,oBAAoB,QAASQ,CAAS,EACzCR,EAAO,UACT,QAAQ,IAAI,aAAa,EACzBI,EAAO,EAAK,GAGlB,EAEEJ,GAAO,iBAAiB,QAASQ,EAAW,CAAE,KAAM,EAAK,CAAC,EAG5D,QAASE,EAAI,EAAGA,EAAIR,EAASQ,IAAK,CAChC,IAAIC,EAAS,IAAI,OAAON,CAAY,EAEpCM,EAAO,UAAaC,GAAU,CACxB,OAAOA,EAAM,MAAS,SACxBX,IAAmBW,EAAM,IAAI,GAE7BJ,EAAU,EACVL,EAAQS,EAAM,IAAI,EAEtB,EAEAD,EAAO,QAAWC,GAAU,CAC1BJ,EAAU,EACVJ,EAAOQ,CAAK,CACd,EAEAD,EAAO,YAAY,CACjB,KAAAb,EACA,WAAAC,EACA,MAAOW,EACP,QAAAR,CACF,CAAC,EAEDK,EAAQ,KAAKI,CAAM,CACrB,CAEA,IAAI,gBAAgBN,CAAY,CAClC,CAAC,CACH,CAEA,SAASC,GAAc,CACrB,OAAO,UAAY,CACjB,IAAMO,EAAUC,GAAS,CACvB,IAAMC,EAAU,IAAI,YAAY,EAAE,OAAOD,CAAI,EAC7C,OAAO,OAAO,OAAO,OAAO,UAAWC,EAAQ,MAAM,CACvD,EAEA,SAASC,EAAsBC,EAAK,CAClC,OAAO,MAAM,KAAKA,CAAG,EAClB,IAAKC,GAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAC1C,KAAK,EAAE,CACZ,CAEA,iBAAiB,UAAW,MAAON,GAAU,CAC3C,IAAId,EAAOc,EAAM,KAAK,KAClBb,EAAaa,EAAM,KAAK,WACxBO,EACAC,EAAQR,EAAM,KAAK,MACnBV,EAAUU,EAAM,KAAK,QAEnBS,EAAWD,EAEjB,OAAa,CACX,IAAME,EAAc,MAAMT,EAAOf,EAAOsB,CAAK,EACvCG,EAAW,IAAI,WAAWD,CAAW,EACvCE,EAAQ,GAEZ,QAASC,EAAI,EAAGA,EAAI1B,EAAY0B,IAAK,CACnC,IAAMC,EAAY,KAAK,MAAMD,EAAI,CAAC,EAC5BE,EAAcF,EAAI,EAIxB,IAFcF,EAASG,CAAS,IAAMC,IAAgB,EAAI,EAAI,GAAM,MAErD,EAAG,CAChBH,EAAQ,GACR,KACF,CACF,CAEA,GAAIA,EAAO,CACTL,EAAOH,EAAsBO,CAAQ,EACrC,QAAQ,IAAIJ,CAAI,EAChB,KACF,CAEA,IAAMS,EAAWR,EACjBA,GAASlB,EASPkB,EAAQQ,EAAW,OAClBR,GAAS,IAAMlB,IAAYmB,GAE5B,YAAYD,CAAK,CAErB,CAEA,YAAY,CACV,KAAAD,EACA,KAAArB,EACA,WAAAC,EACA,MAAAqB,CACF,CAAC,CACH,CAAC,CACH,EAAE,SAAS,CACb,CChIe,SAARS,EACLC,EACAC,EAAa,EACbC,EAAS,KACTC,EAAmB,KACnBC,EAAW,EACX,CACA,eAAQ,MAAM,WAAW,EAClB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAIC,EAAe,IAAI,gBAAgB,IAAI,KAAK,CAC9C,IAAKC,EAAY,EAAG,KACtB,EAAG,CAAE,KAAM,wBAAyB,CAAC,CAAC,EAElCC,EAAS,IAAI,OAAOF,CAAY,EAC9BG,EAAY,IAAM,CACtBD,EAAO,UAAU,EACbP,GAAU,OAEZA,EAAO,oBAAoB,QAASQ,CAAS,EACzCR,EAAO,UACT,QAAQ,IAAI,aAAa,EACzBI,EAAO,EAAK,GAGlB,EAEEJ,GAAO,iBAAiB,QAASQ,EAAW,CAAE,KAAM,EAAK,CAAC,EAG5DD,EAAO,UAAaE,GAAU,CACxB,OAAOA,EAAM,MAAS,SACxBR,IAAmBQ,EAAM,IAAI,GAE7BD,EAAU,EACVL,EAAQM,EAAM,IAAI,EAEtB,EAEAF,EAAO,QAAWE,GAAU,CAC1BD,EAAU,EACVJ,EAAOK,CAAK,CACd,EAEAF,EAAO,YAAY,CACjB,KAAAT,EACA,WAAAC,CACF,CAAC,EAED,IAAI,gBAAgBM,CAAY,CAClC,CAAC,CACH,CAEA,SAASC,GAAc,CACrB,OAAO,UAAY,CACjB,IAAMI,EAAUC,GAAS,CACvB,IAAMC,EAAU,IAAI,YAAY,EAAE,OAAOD,CAAI,EAC7C,OAAO,OAAO,OAAO,OAAO,UAAWC,EAAQ,MAAM,EAClD,KAAMC,GACL,MAAM,KAAK,IAAI,WAAWA,CAAM,CAAC,EAC9B,IAAKC,GAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAC1C,KAAK,EAAE,CACZ,CACJ,EAEA,iBAAiB,UAAW,MAAOL,GAAU,CAC3C,IAAIX,EAAOW,EAAM,KAAK,KAClBV,EAAaU,EAAM,KAAK,WAExBM,EACAC,EAAQ,EACZ,GACMA,EAAQ,IACV,YAAYA,CAAK,EAEnBD,EAAO,MAAML,EAAOZ,EAAOkB,GAAO,QAC3BD,EAAK,UAAU,EAAGhB,CAAU,IAAM,MAAMA,EAAa,CAAC,EAAE,KAAK,GAAG,GAEzEiB,GAAS,EAET,YAAY,CACV,KAAAD,EACA,KAAAjB,EACA,WAAAC,EACA,MAAAiB,CACF,CAAC,CACH,CAAC,CACH,EAAE,SAAS,CACb,CCrFA,IAAMC,EAAa,CACjB,KAAQC,EACR,KAAQA,CACV,EAGMC,EAAI,CAACC,EAAM,GAAIC,EAAS,CAAC,IAAM,CACnC,IAAIC,EAAS,IAAI,IAAIF,EAAK,OAAO,SAAS,IAAI,EAC9C,cAAO,QAAQC,CAAM,EAAE,QAAQ,CAAC,CAACE,EAAGC,CAAC,IAAMF,EAAO,aAAa,IAAIC,EAAGC,CAAC,CAAC,EACjEF,EAAO,SAAS,CACzB,EAEMG,EAAW,CAACC,EAAMC,IACtBR,EAAE,4CAA4CO,CAAI,QAAS,CAAE,YAAAC,CAAY,CAAC,EAEtEC,EAAe,CACnB,CACE,KAAM,YACN,IAAK,0GACL,MAAO,OAAO,MAChB,EACA,CACE,KAAM,cACN,IAAK,4IACL,MAAO,OAAO,MAChB,CACF,GA+CC,SAAY,CACX,IAAMC,EAAS,SAAS,eAAe,QAAQ,EACzCC,EAAQ,SAAS,eAAe,OAAO,EACvCC,EAAQ,SAAS,eAAe,OAAO,EACvCC,EAAW,SAAS,eAAe,UAAU,EAC7CC,EAAgB,KAAK,MAAM,SAAS,eAAe,gBAAgB,EAAE,WAAW,EAChFC,EAAU,SAAS,cAAc,SAAS,EAC5CC,EAAkB,GAElBD,GACFA,EAAQ,iBAAiB,SAAU,IAAM,CACnCA,EAAQ,OACVC,EAAkB,GAEtB,CAAC,EAGH,IAAMC,EAAS,CAAC,CAAE,SAAAC,EAAU,UAAAC,EAAW,SAAAC,CAAS,IAAM,CACpDR,EAAM,UAAYM,EAClBR,EAAO,UAAYS,EACnBR,EAAM,IAAMS,EACZP,EAAS,MAAM,QAAU,MAC3B,EAEA,GAAI,CAAC,OAAO,gBAAiB,CAC3BI,EAAO,CACL,SAAU,8BACV,UAAW,0NACX,SAAUI,EAAS,SAAUP,CAAa,CAC5C,CAAC,EACD,MACF,CAeAJ,EAAO,UAAY,iBAEnB,OAAW,CAAE,MAAAY,EAAO,KAAAC,EAAM,IAAAC,CAAI,IAAKC,EAC5BH,GACHL,EAAO,CACL,SAAU,mBAAmBM,CAAI,GACjC,UAAWC,EACX,SAAUH,EAAS,SAAUP,CAAa,CAC5C,CAAC,EAIL,GAAM,CAAE,UAAAY,EAAW,MAAAC,CAAM,EAAI,KAAK,MAAM,SAAS,eAAe,kBAAkB,EAAE,WAAW,EAEzFC,EAAUC,EAAWF,EAAM,SAAS,EAC1C,GAAI,CAACC,EAAS,CACZX,EAAO,CACL,SAAU,mBACV,UAAW,sEACX,SAAUI,EAAS,SAAUP,CAAa,CAC5C,CAAC,EACD,MACF,CAEAJ,EAAO,UAAY,kCAAkCiB,EAAM,SAAS,KACpEd,EAAS,MAAM,QAAU,eAKzB,IAAMiB,EAAW,SAAS,eAAe,cAAc,EACvDpB,EAAO,YAAYoB,CAAQ,EAE3B,IAAIC,EAAkB,EAClBC,EAAiB,GACfC,EAAa,KAAK,IAAI,GAAI,CAACN,EAAM,SAAS,EAEhD,GAAI,CACF,IAAMO,EAAK,KAAK,IAAI,EACd,CAAE,KAAAC,EAAM,MAAAC,CAAM,EAAI,MAAMR,EAC5BF,EACAC,EAAM,WACN,KACCU,GAAU,CACT,IAAMC,EAAQ,KAAK,IAAI,EAAIJ,EAEvBI,EAAQP,EAAkB,MAC5BA,EAAkBO,EAClBR,EAAS,KAAO,WAAWO,EAAQC,GAAO,QAAQ,CAAC,CAAC,QAQtD,IAAMC,EAAc,KAAK,IAAI,EAAIN,EAAYI,CAAK,EAC5CG,GAAY,EAAI,KAAK,IAAID,EAAa,CAAC,GAAK,IAClD1B,EAAS,eAAe,EAAI2B,EAC5B3B,EAAS,kBAAkB,MAAM,MAAQ,GAAG2B,CAAQ,IAEhDD,EAAc,IAAO,CAACP,IACxBtB,EAAO,OACL,SAAS,cAAc,IAAI,EAC3B,SAAS,eACP,8EACF,CACF,EACAsB,EAAiB,GAErB,CACF,EACMS,EAAK,KAAK,IAAI,EAQpB,GAPA,QAAQ,IAAI,CAAE,KAAAN,EAAM,MAAAC,CAAM,CAAC,EAE3BxB,EAAM,UAAY,WAClBF,EAAO,UAAY,cAAc+B,EAAKP,CAAE,OAAOE,CAAK,cACpDzB,EAAM,IAAMU,EAAS,QAASP,CAAa,EAC3CD,EAAS,MAAM,QAAU,OAErBG,EAAiB,CAmBnB,IAAS0B,EAAT,UAA2B,CACzB,IAAMC,EAAQ,OAAO,SAAS,KAC9B,OAAO,SAAS,QACdC,EAAE,mDAAoD,CACpD,SAAUT,EACV,MAAAC,EACA,MAAAO,EACA,YAAaF,EAAKP,CACpB,CAAC,CACH,CACF,EA5BMW,EAAY,SAAS,eAAe,UAAU,EAGpDA,EAAU,MAAM,QAAU,OAC1BA,EAAU,MAAM,WAAa,SAC7BA,EAAU,MAAM,eAAiB,SACjCA,EAAU,MAAM,OAAS,OACzBA,EAAU,MAAM,aAAe,OAC/BA,EAAU,MAAM,OAAS,UACzBA,EAAU,MAAM,WAAa,UAC7BA,EAAU,MAAM,MAAQ,QACxBA,EAAU,MAAM,WAAa,OAC7BA,EAAU,MAAM,QAAU,oBAC1BA,EAAU,MAAM,cAAgB,MAChCA,EAAU,MAAM,MAAQ,kBACxBA,EAAU,MAAM,OAAS,iBACzBA,EAAU,UAAY,yCActBA,EAAU,QAAUH,EACpB,WAAWA,EAAiB,GAAK,CAEnC,MACE,WAAW,IAAM,CACf,IAAMC,EAAQ,OAAO,SAAS,KAC9B,OAAO,SAAS,QACdC,EAAE,mDAAoD,CACpD,SAAUT,EACV,MAAAC,EACA,MAAAO,EACA,YAAaF,EAAKP,CACpB,CAAC,CACH,CACF,EAAG,GAAG,CAGV,OAASY,EAAK,CACZ7B,EAAO,CACL,SAAU,qBACV,UAAW,kCAAkC6B,EAAI,OAAO,GACxD,SAAUzB,EAAS,SAAUP,CAAa,CAC5C,CAAC,CACH,CACF,GAAG",
  "names": ["process", "data", "difficulty", "signal", "progressCallback", "threads", "resolve", "reject", "webWorkerURL", "processTask", "workers", "terminate", "w", "i", "worker", "event", "sha256", "text", "encoded", "uint8ArrayToHexString", "arr", "c", "hash", "nonce", "threadId", "currentHash", "thisHash", "valid", "j", "byteIndex", "nibbleIndex", "oldNonce", "process", "data", "difficulty", "signal", "progressCallback", "_threads", "resolve", "reject", "webWorkerURL", "processTask", "worker", "terminate", "event", "sha256", "text", "encoded", "result", "c", "hash", "nonce", "algorithms", "process", "u", "url", "params", "result", "k", "v", "imageURL", "mood", "cacheBuster", "dependencies", "status", "image", "title", "progress", "anubisVersion", "details", "userReadDetails", "ohNoes", "titleMsg", "statusMsg", "imageSrc", "imageURL", "value", "name", "msg", "dependencies", "challenge", "rules", "process", "algorithms", "rateText", "lastSpeedUpdate", "showingApology", "likelihood", "t0", "hash", "nonce", "iters", "delta", "probability", "distance", "t1", "onDetailsExpand", "redir", "u", "container", "err"]
}
